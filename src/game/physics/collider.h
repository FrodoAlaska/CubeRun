#pragma once

#include "engine/defines.h"

#include <glm/vec3.hpp>

#include <string>

// DEFS
/////////////////////////////////////////////////////////////////////////////////
#define POINTS_MAX 8
/////////////////////////////////////////////////////////////////////////////////

struct Body;

// Collider
/////////////////////////////////////////////////////////////////////////////////
struct Collider {
  glm::vec3 scale;
  glm::vec3 min, max;
  glm::vec3 points[POINTS_MAX];

  std::string id;
  bool is_grounded;

  Body* body;
};
/////////////////////////////////////////////////////////////////////////////////

// ColliderData
/////////////////////////////////////////////////////////////////////////////////
struct ColliderData {
  Collider* coll1; 
  Collider* coll2;

  glm::vec3 normal; 
  f32 depth;
  bool is_colliding;
};
/////////////////////////////////////////////////////////////////////////////////

// Public functions
/////////////////////////////////////////////////////////////////////////////////
const ColliderData collider_colliding(const Collider* coll1, const Collider* coll2);
void collider_update_points(Collider* collider, const glm::vec3& pos);
/////////////////////////////////////////////////////////////////////////////////
